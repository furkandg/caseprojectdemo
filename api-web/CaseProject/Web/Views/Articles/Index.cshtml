<script src="~/Assets/Template/MaterialTemp/vendors/fileinput/fileinput.min.js"></script>
<style>
    th {
        font-weight: bold !important;
    }
</style>

<div class="col-sm-12" id="articlesList">
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-backdrop="false">
        
        <div class="modal-dialog" role="document">
            <div class="modal-content">
               
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Güncelle</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <div class="alert alert-success alert-dismissible" role="alert" v-if="state.condition == true">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        {{state.message}}
                    </div>

                    <div class="alert alert-danger alert-dismissible" role="alert" v-if="state.condition== false">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                        Oh snap! Change a few things up and try submitting again.
                    </div>
                    <form id="articlesUpdate">
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                            <div class="fileinput-preview thumbnail" data-trigger="fileinput">
                                <img v-bind:src="guncellenecekData.path" name="fileImage" />
                            </div>
                            <div>
                                <span class="btn btn-success btn-file">
                                    <span class="fileinput-new">Kapak</span>
                                    <span class="fileinput-exists">Değiştir</span>
                                    <input type="file" id="raster-import-file" name="fileImage">
                                </span>
                                <a href="#" class="btn btn-danger fileinput-exists" data-dismiss="fileinput">Kaldır</a>
                            </div>
                        </div>
                        <input type="hidden" id="custId" name="id" v-model="guncellenecekData.id">
                        <input type="hidden" name="path" v-model="guncellenecekData.path">

                        <div class="input-group">
                            <span class="input-group-addon"><i class="zmdi zmdi-layers"></i></span>
                            <div class="fg-line">
                                <select class="form-control" v-model="guncellenecekData.kategoriId" name="kategoriId">
                                    <option>Kategori Seçiniz</option>
                                    <option v-for="item in categoryList" v-bind:value="item.id">{{item.ad}}</option>
                                </select>
                            </div>
                        </div>

                        <div class="input-group mt-3">
                            <span class="input-group-addon"><i class="zmdi zmdi-layers"></i></span>
                            <div class="fg-line">
                                <input type="text" class="form-control" placeholder="Başlık" name="title" v-model="guncellenecekData.title">
                            </div>
                        </div>

                        <div class="input-group mt-3">
                            <span class="input-group-addon"><i class="zmdi zmdi-collection-text"></i></span>
                            <div class="fg-line">
                                <textarea class="form-control" rows="4" placeholder="Metin" name="text" v-model="guncellenecekData.text"></textarea>
                            </div>
                        </div>
                    </form>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                    <button type="button" class="btn btn-primary" v-on:click="editArticlesEnd()">Değişiklikleri Kaydet</button>
                </div>
            </div>
        </div>
    </div>


    <div class="card">
        <div class="card-header ch-alt m-b-20">
            <h2>Yazı İşlemleri <small>Yazı Listesi</small></h2>


            <a href="/Articles/Ekle" class="btn bgm-green btn-float waves-effect"><i class="zmdi zmdi-plus"></i></a>
        </div>

        <div class="card-body card-padding">
            <div role="tabpanel">
                <div class="card">
                    <div class="card-header">
                        @*<h2>Striped rows <small>Add zebra-striping to any table row within the tbody</small></h2>*@
                    </div>

                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Kapak</th>
                                    <th>Başlık</th>
                                    <th>Metin</th>
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="item in list" v-bind:id="'silButon-'+ item.id">
                                    <td> <img v-bind:src="item.path" style="height:50px;object-fit:contain;" /></td>
                                    <td>{{item.title}}</td>
                                    <td><span style="display:block;text-overflow: ellipsis;width: 200px;overflow: hidden; white-space: nowrap;">{{item.text}}</span></td>
                                    <td class="text-left">
                                        <a class="btn btn-icon command-edit waves-effect waves-circle" data-toggle="modal" data-target="#exampleModal" v-on:click="editArticlesStart(item.id)"><span class="zmdi zmdi-edit"></span></a>
                                        <button class="btn btn-icon command-delete waves-effect waves-circle"><span class="zmdi zmdi-delete" v-on:click="articlesDelete(item.id)"></span></button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>




            </div>


        </div>
    </div>
</div>


<script type="text/javascript">
    new Vue({
        el: "#articlesList",
        data: {
            list: "",
            state: {
                condition: null,
                message: ""
            },
            guncellenecekData: {
                title: "",
                text: "",
                path: "",
                id: null,
                kategoriId: null
            },
            categoryList: ""

        },
        beforeCreate() {
            if (!localStorage.getItem("localToken")) {
                window.location.href = "/login/index";
            }
        },
        beforeMount() {
            this.getAllList()
        },
        methods: {
            getAllList() {
                $.ajax({
                    dataType: 'json',
                    type: 'POST',
                    contentType: 'application/json',
                    url: 'http://localhost:1917/api/Articles/ListAll',
                    success: (res, status) => {
                        this.list = res;
                    },
                    error: function (res, status) {
                        console.error("Hata")
                    },
                })

            },
            articlesDelete(id) {
                Swal.fire({
                    title: 'Silmek İstediğinize Emin Misiniz?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, eminim!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            headers: {
                                'Authorization': 'bearer ' + localStorage.getItem("localToken")
                            },
                            url: 'http://localhost:1917/api/Articles/SoftDelete/' + id.toString(),
                            success: (res, status) => {
                                this.list = this.list.filter(x => x.id != id);
                            },
                            error: function (res, status) {
                                console.error("Hata")
                            },
                        })
                        Swal.fire(
                            'Silindi!',
                            'İşleminiz Başarıyla Gerçekleştirildi.',
                            'success'
                        )
                    }
                })
            },
            editArticlesStart(id) {
                $.ajax({
                    dataType: 'json',
                    type: 'POST',
                    contentType: 'application/json',
                    url: 'http://localhost:1917/api/Articles/Get/' + id.toString(),
                    success: (res, status) => {
                        this.guncellenecekData.title = res.title;
                        this.guncellenecekData.text = res.text;
                        this.guncellenecekData.path = res.path;
                        this.guncellenecekData.id = res.id;
                        this.guncellenecekData.kategoriId = res.kategoriId;
                        this.kategoriList();
                    },
                    error: function (res, status) {
                        console.error("Hata")
                    },
                })
            },
            editArticlesEnd() {
                var form = $('#articlesUpdate')[0];
                var data = new FormData(form);
                $.ajax({
                    dataType: 'json',
                    type: 'POST',
                    headers: {
                        'Authorization': 'bearer ' + localStorage.getItem("localToken")
                    },
                    data: data,
                    processData: false,
                    contentType: false,
                    url: 'http://localhost:1917/api/Articles/Update',
                    success: (res, status) => {
                        this.getAllList()
                        this.state.condition = true;
                        this.state.message = "Güncelleme İşlemi Başarılı";
                        setTimeout(() => { this.state.condition = null; }, 1000);
                    },
                    error: (res, status) => {
                        this.getAllList()
                        this.state.condition = true;
                        this.state.message = "Güncelleme İşlemi Başarılı";
                        setTimeout(() => { this.state.condition = null; }, 1000);
                    },
                })

            },
            kategoriList() {
                $.ajax({
                    dataType: 'json',
                    type: 'POST',
                    contentType: 'application/json',
                    url: 'http://localhost:1917/api/Category/ListAll',
                    success: (res, status) => {
                        this.categoryList = res
                    },
                    error: function (res, status) {

                    },
                })

            },
            
        }
    })
</script>



