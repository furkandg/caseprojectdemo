#pragma checksum "C:\Users\Mekansal Bulut\Desktop\case\CaseProject\Web\Views\Category\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "19be843b8aa77523fe6851f900878ec5236d1817"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Category_Index), @"mvc.1.0.view", @"/Views/Category/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Mekansal Bulut\Desktop\case\CaseProject\Web\Views\_ViewImports.cshtml"
using Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Mekansal Bulut\Desktop\case\CaseProject\Web\Views\_ViewImports.cshtml"
using Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Mekansal Bulut\Desktop\case\CaseProject\Web\Views\_ViewImports.cshtml"
using Model.DtoModel;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Mekansal Bulut\Desktop\case\CaseProject\Web\Views\_ViewImports.cshtml"
using Model.ViewModel;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"19be843b8aa77523fe6851f900878ec5236d1817", @"/Views/Category/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a86823306d1de1d2fc60fadcd67335ff3130f8ea", @"/Views/_ViewImports.cshtml")]
    public class Views_Category_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<style>
  th{
      font-weight:bold !important;

  }
</style>

<div class=""col-sm-12"" id=""categoryList"">


    <div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"" data-backdrop=""false"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Güncelle</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""form-group"">
                        <label for=""exampleInputEmail1"">Ad:</label>
                        <input type=""email"" class=""form-control"" id=""exampleInputEmail1"" aria-describedby=""emailHelp""  v-model=""guncellenecekData.ad"">
       ");
            WriteLiteral(@"             </div>
                    <div class=""form-group"">
                        <label for=""exampleInputPassword1"">Açıklama:</label>
                        <textarea class=""form-control"" rows=""4"" placeholder=""Açıklama"" v-model=""guncellenecekData.aciklama""></textarea>
                    </div>
                  
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Kapat</button>
                    <button type=""button"" class=""btn btn-primary"" v-on:click=""editCategoryEnd()"">Değişiklikleri Kaydet</button>
                </div>
            </div>
        </div>
    </div>




    <div class=""card"">
        <div class=""card-header ch-alt m-b-20"">
            <h2>Kategori İşlemleri <small>Kategori Listesi</small></h2>
            <ul class=""actions"">
                <li>
                    <a href=""#"">
                        <i class=""zmdi zmdi-refresh-alt""></i>
             ");
            WriteLiteral(@"       </a>
                </li>
                <li>
                    <a href=""#"">
                        <i class=""zmdi zmdi-download""></i>
                    </a>
                </li>
                <li class=""dropdown"">
                    <a href=""#"" data-toggle=""dropdown"">
                        <i class=""zmdi zmdi-more-vert""></i>
                    </a>

                    <ul class=""dropdown-menu dropdown-menu-right"">
                        <li>
                            <a href=""#"">Change Date Range</a>
                        </li>
                        <li>
                            <a href=""#"">Change Graph Type</a>
                        </li>
                        <li>
                            <a href=""#"">Other Settings</a>
                        </li>
                    </ul>
                </li>
            </ul>

            <a href=""/Category/Ekle"" class=""btn bgm-green btn-float waves-effect""><i class=""zmdi zmdi-plus""></i></a>
        </di");
            WriteLiteral("v>\r\n\r\n        <div class=\"card-body card-padding\">\r\n            <div role=\"tabpanel\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n");
            WriteLiteral(@"                    </div>

                    <div class=""table-responsive"">
                        <table class=""table table-striped"">
                            <thead>
                                <tr>
                                    <th>Ad</th>
                                    <th>Açıklama</th>
                                  
                                    <th>İşlemler</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for=""item in list"" v-bind:id=""'silButon-'+ item.id"">
                                    <td>{{item.ad}}</td>
                                    <td><span style=""display:block;text-overflow: ellipsis;width: 200px;overflow: hidden; white-space: nowrap;"">{{item.aciklama}}</span></td>
                                    <td class=""text-left"">
                                        <a class=""btn btn-icon command-edit waves-effect waves-circle"" data-togg");
            WriteLiteral(@"le=""modal"" data-target=""#exampleModal"" v-on:click=""editCategoryStart(item.id)""><span class=""zmdi zmdi-edit""></span></a>
                                        <button class=""btn btn-icon command-delete waves-effect waves-circle""><span class=""zmdi zmdi-delete"" v-on:click=""categoryDelete(item.id)""></span></button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>




            </div>


        </div>
    </div>
</div>

<script type=""text/javascript"">
    new Vue({
        el: ""#categoryList"",
        data: {
            list: """",
            guncellenecekData: {
                ad: """",
                aciklama: """",
                id: null
            }
        },
        beforeCreate() {
            if (!localStorage.getItem(""localToken"")) {
                window.location.href = ""/login/index"";
            }
        },
     ");
            WriteLiteral(@"   beforeMount() {
           this.getAllList()
        },

        methods: {
            getAllList() {
                $.ajax({
                    dataType: 'json',
                    type: 'POST',
                    contentType: 'application/json',
                    url: 'http://localhost:1917/api/Category/ListAll',
                    success: (res, status) => {
                        this.list = res;
                    },
                    error: function (res, status) {
                        console.error(""Hata"")
                    },
                })
            },
            categoryDelete(id) {
              

                Swal.fire({
                    title: 'Silmek İstediğinize Emin Misiniz?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, eminim!'
                }).then((r");
            WriteLiteral(@"esult) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                              headers: {
                                  'Authorization': 'bearer ' + localStorage.getItem(""localToken"")
                                        },
                            url: 'http://localhost:1917/api/Category/SoftDelete/' + id.toString(),
                            success: (res, status) => {
                                this.list = this.list.filter(x => x.id != id);
                            },
                            error: function (res, status) {
                                console.error(""Hata"")
                            },
                        })
                        Swal.fire(
                            'Silindi!',
                            'İşleminiz Başarıyla Gerçekleştirildi.',
                            'success'
                        )
                    }
                })
 ");
            WriteLiteral(@"           },
            editCategoryStart(id) {
                $.ajax({
                    dataType: 'json',
                    type: 'POST',
                    contentType: 'application/json',
                    url: 'http://localhost:1917/api/Category/Get/' + id.toString(),
                    success: (res, status) => {
                        this.guncellenecekData.ad = res.ad;
                        this.guncellenecekData.aciklama = res.aciklama;
                        this.guncellenecekData.id = res.id;
                      
                    },
                    error: function (res, status) {
                        console.error(""Hata"")
                    },
                })
            },
            editCategoryEnd() {
                $.ajax({
                    dataType: 'json',
                    type: 'POST',
                    headers: {
                        'Authorization': 'bearer ' + localStorage.getItem(""localToken"")
                    },
   ");
            WriteLiteral(@"                 data: JSON.stringify(this.guncellenecekData),
                    contentType: 'application/json',
                    url: 'http://localhost:1917/api/Category/Update',
                    success: (res, status) => {
                        this.getAllList()
                    },
                    error:(res, status) => {
                        this.getAllList()
                    },
                })

            }

        }
    })
</script>



");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
